{"version":3,"sources":["pages/HomePage.tsx","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/NewPerson/NewPerson.tsx","api/people.ts","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["HomePage","PersonName","person","search","useLocation","to","pathname","slug","className","classNames","maleColor","sex","femaleColor","name","PersonRow","personSlug","useParams","born","died","mother","motherName","father","fatherName","PeopleTable","people","sortBy","sortOrder","useState","currSortBy","setCurrSortBy","useSearchParams","searchParams","setSearchParams","onSortByChange","sortType","currSortOrder","set","columnClasses","columnName","arrowImage","src","process","alt","onClick","map","currentYear","Date","getFullYear","NewPerson","setPeople","setName","setSex","setBorn","setDied","setMotherName","setFatherName","isFieldTouched","setIsFieldTouched","mothers","filter","fathers","errors","length","test","isEnabled","Object","keys","some","x","onSubmit","event","preventDefault","newPerson","toLowerCase","replace","find","htmlFor","type","id","placeholder","required","value","onChange","target","onBlur","error","min","max","disabled","getPeople","a","fetch","res","json","peopleFromServer","personWithParents","PeoplePage","location","appliedQuery","get","query","setQuery","displayForm","includes","fetchPeople","useEffect","applyQuery","useCallback","debounce","newQuery","delete","visiblePeople","lowerQuery","sort","b","localeCompare","NotFoundPage","Header","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8de09ab2.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage: React.FC = () => (\n  <h1>Home page</h1>\n);\n\nexport default HomePage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { Person } from '../../types/person';\n\nimport './PersonName.scss';\n\ntype Props = {\n  person: Person\n};\n\nconst PersonName: React.FC<Props> = ({ person }) => {\n  const { search } = useLocation();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${person.slug}`,\n        search,\n      }}\n      className={classNames({\n        maleColor: person.sex === 'm',\n        femaleColor: person.sex === 'f',\n      })}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n\nexport default PersonName;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport PersonName from '../PersonName/PersonName';\n\nimport { Person } from '../../types/person';\n\nimport './PersonRow.scss';\n\ntype Props = {\n  person: Person\n};\n\nconst PersonRow: React.FC<Props> = ({ person }) => {\n  const { personSlug } = useParams<{ personSlug: string }>();\n\n  return (\n    <tr className={classNames({ 'selected-person': personSlug === person.slug })}>\n      <td>\n        <PersonName person={person} />\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? <PersonName person={person.mother} />\n          : <b>{person.motherName}</b>}\n      </td>\n      <td>\n        {person.father ? (\n          <PersonName person={person.father} />\n        ) : <b>{person.fatherName}</b>}\n      </td>\n    </tr>\n  );\n};\n\nexport default PersonRow;\n","import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport PersonRow from '../PersonRow/PersonRow';\n\nimport { Person } from '../../types/person';\n\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[]\n  sortBy: string | null\n  sortOrder: string | null\n};\n\nconst PeopleTable: React.FC<Props> = ({ people, sortBy, sortOrder }) => {\n  const [currSortBy, setCurrSortBy] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onSortByChange = (sortType: string) => {\n    let currSortOrder = sortOrder;\n\n    if (currSortBy !== sortType) {\n      setCurrSortBy(sortType);\n      currSortOrder = null;\n    }\n\n    searchParams.set('sortBy', sortType);\n    if (currSortOrder === 'asc') {\n      searchParams.set('sortOrder', 'desc');\n    } else {\n      searchParams.set('sortOrder', 'asc');\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  const columnClasses = (columnName: string): string => {\n    return classNames(\n      'sort-button',\n      { 'sort-button--selected': sortBy === columnName },\n    );\n  };\n\n  const arrowImage = (columnName: string) => {\n    if (sortBy !== columnName) {\n      return (\n        <img\n          src={`${process.env.PUBLIC_URL}/images/sort_both.png`}\n          alt=\"img\"\n          className=\"sort-button__arrow\"\n        />\n      );\n    }\n\n    if (sortOrder === 'desc') {\n      return (\n        <img\n          src={`${process.env.PUBLIC_URL}/images/sort_asc.png`}\n          alt=\"img\"\n          className=\"sort-button__arrow\"\n        />\n      );\n    }\n\n    return (\n      <img\n        src={`${process.env.PUBLIC_URL}/images/sort_desc.png`}\n        alt=\"img\"\n        className=\"sort-button__arrow\"\n      />\n    );\n  };\n\n  return (\n    <table className=\"PeopleTable\">\n      <thead>\n        <tr className=\"PeopleTable__head\">\n          <th\n            onClick={() => onSortByChange('name')}\n            className={columnClasses('name')}\n          >\n            Name\n            {arrowImage('name')}\n          </th>\n          <th\n            onClick={() => onSortByChange('sex')}\n            className={columnClasses('sex')}\n          >\n            Sex\n            {arrowImage('sex')}\n          </th>\n          <th\n            onClick={() => onSortByChange('died')}\n            className={columnClasses('died')}\n          >\n            Born\n            {arrowImage('died')}\n          </th>\n          <th\n            onClick={() => onSortByChange('born')}\n            className={columnClasses('born')}\n          >\n            Died\n            {arrowImage('born')}\n          </th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <PersonRow key={person.slug} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PeopleTable;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types/person';\n\nimport './NewPerson.scss';\n\ntype Props = {\n  people: Person[]\n  setPeople: React.Dispatch<React.SetStateAction<Person[]>>\n};\n\ntype Errors = {\n  name: boolean\n  sex: boolean\n  born: boolean\n  died: boolean\n};\n\nconst currentYear = new Date().getFullYear();\n\nconst NewPerson: React.FC<Props> = ({ people, setPeople }) => {\n  const [name, setName] = useState('');\n  const [sex, setSex] = useState('');\n  const [born, setBorn] = useState(1400);\n  const [died, setDied] = useState(1400);\n  const [motherName, setMotherName] = useState('');\n  const [fatherName, setFatherName] = useState('');\n\n  const [isFieldTouched, setIsFieldTouched] = useState({\n    name: false,\n    sex: false,\n    born: false,\n    died: false,\n  });\n\n  const clearInputs = () => {\n    setName('');\n    setSex('');\n    setBorn(1400);\n    setDied(1400);\n    setMotherName('');\n    setFatherName('');\n  };\n\n  const clearErrors = () => {\n    setIsFieldTouched({\n      name: false,\n      sex: false,\n      born: false,\n      died: false,\n    });\n  };\n\n  const onFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newPerson = {\n      name,\n      sex,\n      born,\n      died,\n      motherName,\n      fatherName,\n      slug: `${name.toLowerCase().replace(' ', '-')}-${born}`,\n      father: people.find(person => person.name === fatherName),\n      mother: people.find(person => person.name === motherName),\n    };\n\n    setPeople([...people, newPerson]);\n\n    clearInputs();\n    clearErrors();\n  };\n\n  const validate = () => ({\n    name: name.length === 0 || !/^[A-Za-z\\s]*$/.test(name),\n    sex: sex.length === 0,\n    born: born < 1400 || born > currentYear,\n    died: died < born || died >= born + 150,\n  });\n\n  const mothers = people.filter(person => person.sex === 'f' && person.born < born + 16);\n  const fathers = people.filter(person => person.sex === 'm' && person.born < born + 16);\n\n  const errors = validate();\n\n  const isEnabled = !Object.keys(errors).some(x => errors[x as keyof Errors]);\n\n  return (\n    <div className=\"form-container\">\n      <h2 className=\"form-header\">Add person</h2>\n      <form\n        onSubmit={onFormSubmit}\n        className=\"form\"\n      >\n        <label\n          htmlFor=\"name\"\n          className={classNames(\n            'form__label',\n            { 'form__input--error': errors.name && isFieldTouched.name },\n          )}\n        >\n          Name: &nbsp;\n          <input\n            type=\"text\"\n            id=\"name\"\n            placeholder=\"Name\"\n            required\n            value={name}\n            onChange={event => setName(event.target.value)}\n            onBlur={() => setIsFieldTouched({ ...isFieldTouched, name: true })}\n            className={classNames(\n              'form__input--name',\n              { error: errors.name && isFieldTouched.name },\n            )}\n          />\n        </label>\n        <label\n          htmlFor=\"sex\"\n          className=\"form__label\"\n        >\n          Gender: &nbsp;\n          <input\n            type=\"radio\"\n            id=\"sex\"\n            value=\"m\"\n            name=\"gender\"\n            onChange={event => setSex(event.target.value)}\n          />\n          Male\n          <input\n            type=\"radio\"\n            id=\"sex\"\n            value=\"f\"\n            name=\"gender\"\n            onChange={event => setSex(event.target.value)}\n          />\n          Female\n        </label>\n        <label\n          htmlFor=\"born\"\n          className={classNames(\n            'form__label',\n            { 'form__input--error': errors.born && isFieldTouched.born },\n          )}\n        >\n          Born: &nbsp;\n          <input\n            type=\"number\"\n            id=\"born\"\n            min=\"1400\"\n            max={currentYear}\n            value={born}\n            onChange={event => setBorn(+event.target.value)}\n            onBlur={() => setIsFieldTouched({ ...isFieldTouched, born: true })}\n            className={classNames({ error: errors.born && isFieldTouched.born })}\n          />\n        </label>\n        <label\n          htmlFor=\"died\"\n          className={classNames(\n            'form__label',\n            { 'form__input--error': errors.died && isFieldTouched.died },\n          )}\n        >\n          Died: &nbsp;\n          <input\n            type=\"number\"\n            id=\"died\"\n            min=\"1400\"\n            max={currentYear}\n            value={died}\n            onChange={event => setDied(+event.target.value)}\n            onBlur={() => setIsFieldTouched({ ...isFieldTouched, died: true })}\n            className={classNames({ error: errors.died && isFieldTouched.died })}\n          />\n        </label>\n        <label\n          htmlFor=\"mother\"\n          className=\"form__label\"\n        >\n          Mother: &nbsp;\n          <select\n            id=\"mother\"\n            value={motherName}\n            onChange={event => setMotherName(event.target.value)}\n            disabled={!isFieldTouched.born || errors.born}\n          >\n            <option value=\"\">\n              No mother\n            </option>\n            {mothers.map(mother => (\n              <option\n                key={mother.slug}\n                value={mother.name}\n              >\n                {mother.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label\n          htmlFor=\"father\"\n          className=\"form__label\"\n        >\n          Father: &nbsp;\n          <select\n            id=\"father\"\n            value={fatherName}\n            onChange={event => setFatherName(event.target.value)}\n            disabled={!isFieldTouched.born || errors.born}\n          >\n            <option value=\"\">\n              No Father\n            </option>\n            {fathers.map(father => (\n              <option\n                key={father.slug}\n                value={father.name}\n              >\n                {father.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        <button\n          type=\"submit\"\n          disabled={!isEnabled}\n          className=\"form__button\"\n        >\n          Add person\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewPerson;\n","import { Person } from '../types/person';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  const res = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n  const peopleFromServer = await res.json();\n\n  return peopleFromServer.map((person: Person) => {\n    const personWithParents = { ...person };\n\n    personWithParents.mother = peopleFromServer\n      .find((mother: Person) => mother.name === person.motherName);\n    personWithParents.father = peopleFromServer\n      .find((father: Person) => father.name === person.fatherName);\n\n    return personWithParents;\n  });\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Link,\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport PeopleTable from '../../components/PeopleTable/PeopleTable';\nimport NewPerson from '../../components/NewPerson/NewPerson';\n\nimport { getPeople } from '../../api/people';\n\nimport { Person } from '../../types/person';\n\nimport './PeoplePage.scss';\n\nconst PeoplePage: React.FC = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const appliedQuery = searchParams.get('query');\n  const sortBy = searchParams.get('sortBy');\n  const sortOrder = searchParams.get('sortOrder');\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [query, setQuery] = useState(appliedQuery);\n\n  const displayForm = location.pathname.includes('new');\n\n  const fetchPeople = async () => {\n    setPeople(await getPeople());\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n        setSearchParams(searchParams);\n      } else {\n        searchParams.delete('query');\n        setSearchParams(searchParams);\n      }\n    }, 500),\n    [],\n  );\n\n  const onQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  let visiblePeople = appliedQuery\n    ? people.filter(person => {\n      const lowerQuery = appliedQuery.toLowerCase();\n\n      return person.name?.toLowerCase().includes(lowerQuery)\n      || person.motherName?.toLowerCase().includes(lowerQuery)\n      || person.fatherName?.toLowerCase().includes(lowerQuery);\n    })\n    : people;\n\n  if (sortBy) {\n    switch (sortBy) {\n      case 'name':\n      case 'sex': {\n        visiblePeople = [...visiblePeople].sort((a, b) => {\n          switch (sortOrder) {\n            case 'asc':\n              return a[sortBy].localeCompare(b[sortBy]);\n\n            case 'desc':\n              return b[sortBy].localeCompare(a[sortBy]);\n\n            default:\n              return 0;\n          }\n        });\n        break;\n      }\n\n      case 'born':\n      case 'died': {\n        visiblePeople = [...visiblePeople].sort((a, b) => {\n          switch (sortOrder) {\n            case 'asc':\n              return a[sortBy] - b[sortBy];\n\n            case 'desc':\n              return b[sortBy] - a[sortBy];\n\n            default:\n              return 0;\n          }\n        });\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  return (\n    <>\n      <label htmlFor=\"query\">\n        Search: &nbsp;\n        <input\n          type=\"text\"\n          id=\"query\"\n          placeholder=\"Search\"\n          value={query || ''}\n          onChange={onQueryChange}\n          className=\"mb-10\"\n        />\n      </label>\n      <div className=\"container\">\n        <PeopleTable\n          people={visiblePeople}\n          sortBy={sortBy}\n          sortOrder={sortOrder}\n        />\n        {displayForm\n          ? <NewPerson people={people} setPeople={setPeople} />\n          : (\n            <Link\n              to={{\n                pathname: '/people/new',\n                search: location.search,\n              }}\n              className=\"add-new-person\"\n            >\n              <button\n                type=\"button\"\n                className=\"add-new-person__button\"\n              >\n                Add person\n              </button>\n            </Link>\n          )}\n      </div>\n    </>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\n\nconst NotFoundPage: React.FC = () => (\n  <h1>Page not found</h1>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Header.scss';\n\nconst Header: React.FC = () => (\n  <nav className=\"Navigation\">\n    <Link to=\"/\">Home</Link>\n    <Link to=\"/people\">People</Link>\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport HomePage from './pages/HomePage';\nimport PeoplePage from './pages/PeoplePage/PeoplePage';\nimport NotFoundPage from './pages/NotFoundPage';\n\nimport Header from './components/Header/Header';\n\nimport './App.scss';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <Header />\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"people\" element={<PeoplePage />}>\n        <Route path=\":personSlug\" element={<PeoplePage />} />\n        <Route path=\"new\" element={<PeoplePage />} />\n      </Route>\n\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n      <Route path=\"*\" element={<NotFoundPage />} />\n\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}